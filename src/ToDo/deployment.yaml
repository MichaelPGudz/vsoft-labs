
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: todo-ingress
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - host: todo.team2.vsoft.patoarchitekci.io
    http:
      paths:
      - backend:
          service:
            name: todo-service
            port:
              number: 8080
        path: /
        pathType: Prefix
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: 9e56ba8c-af7e-4751-b8d6-e9b8f88113fe
  name: workload-identity-sa-group2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-deployment
spec:
  selector:
    matchLabels:
      app: todo
  template:
    metadata:
      labels:
        app: todo
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: workload-identity-sa-group2
      containers:
        - name: todo
          image: szkolenie202502262.azurecr.io/todo-app/todo-app:abc
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: ConnectionStrings__DefaultConnection
              value: Server=tcp:szkolenie20250226.database.windows.net,1433;Initial Catalog=Szkolenie;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication="Active Directory Default";
            - name: APPLICATIONINSIGHTS_CONNECTION_STRING
              value: "InstrumentationKey=fa7d8419-4cb8-4b09-a255-d96d34b12065;IngestionEndpoint=https://polandcentral-0.in.applicationinsights.azure.com/;LiveEndpoint=https://polandcentral.livediagnostics.monitor.azure.com/;ApplicationId=c1981fb8-58d1-4a64-bf35-52399f503437"
            - name: KeyVaultName
              value: "team02"
---
apiVersion: v1
kind: Service
metadata:
  name: todo-service
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: todo
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appinsights-k8s-property-reader
rules:
- apiGroups: ["", "apps"]
  resources: ["pods", "nodes", "replicasets", "deployments"]
  verbs: ["get", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appinsights-k8s-property-reader-binding
subjects:
- kind: ServiceAccount
  name: workload-identity-sa-group2   # Nazwa ServiceAccount z deployment.yaml
  namespace: default  # Dostosuj do swojego namespace
roleRef:
  kind: ClusterRole
  name: appinsights-k8s-property-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: todo-api-scaler
spec:
  scaleTargetRef:
    name: todo-deployment
  minReplicaCount: 1  # API zawsze musi mieć minimum jedną instancję
  maxReplicaCount: 10
  pollingInterval: 15
  cooldownPeriod: 60
  triggers:
  - type: cpu
    metadata:
      type: Utilization
      value: "60"  # Skaluj gdy średnie użycie CPU przekracza 60%
---